using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Xml;

namespace CW2_OOD
{
    public partial class MainPage : Form
    {
        const string filepath = "state.xml";
        bool fileexists;
        GPAState state;
        Course course;

        int level4Credits = 0;
        int level5Credits = 0;
        int level6Credits = 0;

        List<ModuleControlGroup> tab4ControlGroups = new List<ModuleControlGroup>();
        List<ModuleControlGroup> tab5ControlGroups = new List<ModuleControlGroup>();
        List<ModuleControlGroup> tab6ControlGroups = new List<ModuleControlGroup>();


        public MainPage()
        {
            state = new GPAState();
            fileexists = state.load(filepath);
            course = state.getCourse();

            InitializeComponent();
            tabControl1.Selected += new TabControlEventHandler(tabControl1_Selected);
        }

        void level4tab_updateOnClose(object sender, FormClosedEventArgs args)
        {
            level4Credits = tab_update(Level.LEVEL_4, tab4ControlGroups, Tab4ModulePanel);
        }

        void level5tab_updateOnClose(object sender, FormClosedEventArgs args)
        {
            level5Credits = tab_update(Level.LEVEL_5, tab5ControlGroups, Tab5ModulePanel);
        }

        void level6tab_updateOnClose(object sender, FormClosedEventArgs args)
        {
            level6Credits = tab_update(Level.LEVEL_6, tab6ControlGroups, Tab6ModulePanel);
        }

        /* Method to update the tab pane contents. */
        int tab_update(Level level, List<ModuleControlGroup> tablist, Panel tabpanel)
        {
            EventHandler updateHandler = delegate(object sender, EventArgs args) {tab_update(level, tablist, tabpanel);};
            FormClosedEventHandler formClosedHandler = delegate(object sender, FormClosedEventArgs args) { tab_update(level, tablist, tabpanel);};
            Module[] modlist = course.getModules(level);

            /* Remove controls... */
            foreach(ModuleControlGroup mcg in tablist)
            {
                mcg.removeControls();
            }
            tablist.Clear();

            Point cur = tabpanel.Location;
            foreach(Module m in modlist)
            {
                ModuleControlGroup mcg = new ModuleControlGroup(formClosedHandler, updateHandler, course, level, m, tabpanel);
                mcg.addControls(cur, out cur);
                tablist.Add(mcg);
            }

            return Course.sumModuleCredit(modlist);
        }

        private void BuildCourse_Click(object sender, EventArgs e)
        {
            if (!"".Equals(course.getName()))
            {
                Console.WriteLine("name set");

                DialogResult Box = MessageBox.Show("Course Name Already set. \nDo you wish to change it?", "Override?",
                MessageBoxButtons.YesNoCancel, MessageBoxIcon.Warning);
                if (Box != DialogResult.Yes)
                {
                    return;
                }
            }
            AddCourse form = new AddCourse(course);
            form.Show();
        }

        private void CourseNameSummary_Click(object sender, EventArgs e)
        {

        }

        private void MainPage_Load(object sender, EventArgs e)
        {

        }

        private void tabControl1_Selected(object sender, TabControlEventArgs e)
        {
            if (e.TabPage.Name == SummaryTab.Name)
            {
                CourseNameSummary.Text = "Course Name : " + course.getName();
            }
            if (e.TabPage.Name == Level4Tab.Name)
            {
                tab_update(Level.LEVEL_4, tab4ControlGroups, Tab4ModulePanel);
            }
            if (e.TabPage.Name == Level5Tab.Name)
            {
                tab_update(Level.LEVEL_5, tab5ControlGroups, Tab5ModulePanel);
            }
            if (e.TabPage.Name == Level6Tab.Name)
            {
                tab_update(Level.LEVEL_6, tab6ControlGroups, Tab6ModulePanel);
            }
        }



        private void StartTab_Click(object sender, EventArgs e)
        {

        }

        private void AddModuleLevel4Button_Click(object sender, EventArgs e)
        {
            if (course.getModuleCount(Level.LEVEL_4) < 8 && level4Credits < 120)
            {
                AddModule form = new AddModule(new FormClosedEventHandler(level4tab_updateOnClose), course, Level.LEVEL_4);
                form.Show();
            }
            else
            {
                DialogResult Box = MessageBox.Show("Course/credit limit reached. \nDelete a module or change credits to continue.", "Limit",
                    MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }

        private void AddModuleLevel5Button_Click(object sender, EventArgs e)
        {
            if (course.getModuleCount(Level.LEVEL_5) < 8 && level5Credits < 120)
            {
                AddModule form = new AddModule(new FormClosedEventHandler(level5tab_updateOnClose), course, Level.LEVEL_5);
                form.Show();
            }
            else
            {
                DialogResult Box = MessageBox.Show("Course/credit limit reached. \nDelete a module or change credits to continue.", "Limit",
                    MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }

        private void AddModuleLevel6Button_Click(object sender, EventArgs e)
        {
            if (course.getModuleCount(Level.LEVEL_6) < 8 && level6Credits < 120)
            {
                AddModule form = new AddModule(new FormClosedEventHandler(level6tab_updateOnClose), course, Level.LEVEL_6);
                form.Show();
            }
            else
            {
                DialogResult Box = MessageBox.Show("Course/credit limit reached. \nDelete a module or change credits to continue.", "Limit",
                    MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }

        private void SaveButton_Click(object sender, EventArgs e)
        {
            
            DialogResult Box = MessageBox.Show("Are you sure you want to save?", "Save",
                MessageBoxButtons.YesNo, MessageBoxIcon.Warning);
            if (Box == DialogResult.Yes)
            {
                if(!state.save(filepath))
                {
                    /* error message */
                }
            }
        }

        private void Level4Tab_Click(object sender, EventArgs e)
        {

        }
    }
}

